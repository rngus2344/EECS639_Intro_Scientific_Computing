function [U] = FuncandGradientPotentialEnergy(r1,r2,r3,r4,r5,r6,r7,r8,r9,rx)
    %I have no clue whether this is what she wants for this, but I'm gonna
    %roll with it for now.
    U=((1/((r1)^12))-(2/((r1)^6)))+((1/((r2)^12))-(2/((r2)^6)))+((1/((r3)^12))-(2/((r3)^6)))+((1/((r4)^12))-(2/((r4)^6)))+((1/((r5)^12))-(2/((r5)^6)))+((1/((r6)^12))-(2/((r6)^6)))+((1/((r7)^12))-(2/((r7)^6)))+((1/((r8)^12))-(2/((r8)^6)))+((1/((r9)^12))-(2/((r9)^6)))+((1/((rx)^12))-(2/((rx)^6)));
    syms r1 r2 r3 r4 r5 r6 r7 r8 r9 rx
    fx=((1/((r1)^12))-(2/((r1)^6)))+((1/((r2)^12))-(2/((r2)^6)))+((1/((r3)^12))-(2/((r3)^6)))+((1/((r4)^12))-(2/((r4)^6)))+((1/((r5)^12))-(2/((r5)^6)))+((1/((r6)^12))-(2/((r6)^6)))+((1/((r7)^12))-(2/((r7)^6)))+((1/((r8)^12))-(2/((r8)^6)))+((1/((r9)^12))-(2/((r9)^6)))+((1/((rx)^12))-(2/((rx)^6)));
    grad=jacobian(fx,[r1,r2,r3,r4,r5,r6,r7,r8,r9,rx]);
end
